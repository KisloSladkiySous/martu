---
import { db, Reviews, eq } from "astro:db";

const id = Number(Astro.params.id);
const [review] = await db.select().from(Reviews).where(eq(Reviews.id, id));

if (!review) return new Response("Отзыв не найден", { status: 404 });

if (Astro.request.method === "POST") {
  const form = await Astro.request.formData();
  const text = form.get("text") as string;
  const author = form.get("author") as string;
  const mediaId = Number(form.get("mediaId") || 0) || null;
  const authorImageId = Number(form.get("authorImageId") || 0) || null;

  await db
    .update(Reviews)
    .set({ text, author, mediaId, authorImageId })
    .where(eq(Reviews.id, id));

  return Astro.redirect("/admin/reviews");
}

export const prerender = false;
---

<html lang="ru">
  <head>
    <meta charset="UTF-8" />
    <link rel="stylesheet" href="/src/styles/admin.css" />
    <title>Редактировать отзыв</title>
  </head>
  <body>
    <div class="container">
      <h1>Редактировать отзыв</h1>
      <form method="post" enctype="application/x-www-form-urlencoded">
        <label>Автор</label>
        <input type="text" name="author" value={review.author} required />

        <label>Текст отзыва</label>
        <textarea name="text" rows="4" required>{review.text}</textarea>

        <label>ID медиа (отзыв)</label>
        <input type="number" name="mediaId" value={review.mediaId ?? ""} />

        <label>ID фото автора</label>
        <input
          type="number"
          name="authorImageId"
          value={review.authorImageId ?? ""}
        />

        <button type="submit">Сохранить</button>
      </form>
      <p><a href="/admin">← Назад</a></p>
    </div>
  </body>
</html>
