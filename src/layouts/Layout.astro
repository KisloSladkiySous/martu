---
// src/layouts/Layout.astro
import "../styles/styles.css";
import Navigation from "../components/Navigation.astro";
import Hero from "../components/Hero.astro";
import HeroMobile from "../components/HeroMobile.astro";
import About from "../components/About.astro";
import AboutMobile from "../components/AboutMobile.astro";
import Portfolio from "../components/Portfolio.astro";
import PortfolioMobile from "../components/PortfolioMobile.astro";
import Advantages from "../components/Advantages.astro";
import AdvantagesMobile from "../components/AdvantagesMobile.astro";
import Workflow from "../components/Workflow.astro";
import WorkflowMobile from "../components/WorkflowMobile.astro";
import Price from "../components/Price.astro";
import CustomerReviews from "../components/CustomerReviews.astro";
import Contacts from "../components/Contacts.astro";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="src/assets/logo.svg" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Playfair+Display:ital@0;1&display=swap"
      rel="stylesheet"
    />
    <meta name="generator" content={Astro.generator} />
    <title>Martu</title>
  </head>
  <body>
    <Navigation />

    <main>
      <Hero />
      <About />
      <Portfolio />
      <Advantages />
      <Workflow />
      <Price />
      <CustomerReviews />
      <Contacts />
      <HeroMobile />
      <AboutMobile />
      <PortfolioMobile />
      <AdvantagesMobile />
      <WorkflowMobile />
      <section data-nav-section data-section-index="4">
        <div class="column with-image">
          <div class="wrapper">
            <h1>Мы заодно с вами</h1>
          </div>
        </div>
        <div class="column"></div>
      </section>
      <section data-nav-section data-section-index="5">
        <div class="column">
          <div class="wrapper">
            <h1>Мы заодно с вами</h1>
          </div>
        </div>
        <div class="column with-image"></div>
      </section>
    </main>
  </body>
  <script lang="js">
    document.addEventListener("DOMContentLoaded", () => {
      const nav = document.getElementById("navigation");
      const sections = document.querySelectorAll("[data-nav-section]");
      const navLinks = document.querySelectorAll("#navigation a");

      // Определяем текущую секцию
      let currentSectionIndex = 1;

      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              const index = parseInt(
                entry.target.getAttribute("data-section-index")
              );
              const sectionId = entry.target.id; // Получаем ID секции

              currentSectionIndex = index;

              // Определяем чётность для стилизации навигации
              const isEven = index % 2 === 0;

              nav.style.color = isEven ? "white" : "black";

              navLinks.forEach((link) => {
                // Обновляем классы цвета
                link.classList.remove("white", "black");
                link.classList.add(isEven ? "white" : "black");

                // Проверяем, соответствует ли ссылка текущей секции
                const targetId = link.getAttribute("href").slice(1);
                if (targetId === sectionId) {
                  link.classList.add("active");
                  // Обновляем хеш только если он не совпадает
                  if (window.location.hash !== `#${sectionId}`) {
                    history.replaceState(null, null, `#${sectionId}`);
                  }
                } else {
                  link.classList.remove("active");
                }
              });
            }
          });
        },
        {
          threshold: 0.5,
          rootMargin: "0px",
        }
      );

      // Наблюдаем за всеми секциями
      sections.forEach((section) => {
        observer.observe(section);
      });

      // Плавная прокрутка + обновление хеша при клике
      navLinks.forEach((link) => {
        link.addEventListener("click", (e) => {
          e.preventDefault();
          const targetId = link.getAttribute("href");
          const targetSection = document.querySelector(targetId);

          if (targetSection) {
            // Прокручиваем
            window.scrollTo({
              top: targetSection.offsetTop,
              behavior: "smooth",
            });

            // Обновляем хеш
            history.replaceState(null, null, targetId);
          }
        });
      });

      // Дополнительно: при загрузке страницы, если есть хеш, проскролить к нему
      if (window.location.hash) {
        const targetSection = document.querySelector(window.location.hash);
        if (targetSection) {
          setTimeout(() => {
            window.scrollTo(0, targetSection.offsetTop);
          }, 100); // небольшая задержка, чтобы гарантировать рендер
        }
      }
    });
  </script>
</html>
